{"version":3,"sources":["App.js","index.js"],"names":["App","state","players","numTeams","teams","undefined","handleNumTeamsChange","e","_this","setState","target","value","handlePlayersChange","submitForm","randomizeTeams","classes","this","props","_this$state","react_default","a","createElement","noValidate","autoComplete","className","root","Grid_default","container","spacing","item","xs","TextField_default","onChange","textField","label","select","MenuItem_default","key","helperText","index_es","variant","color","onClick","onSubmit","map","team","idx","join","Component","withStyles","theme","display","flexWrap","marginLeft","unit","marginRight","width","compose","splitEvery","length","shuffle","split","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e77f1ecf.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { Button, Typography } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\nimport { compose, splitEvery } from 'ramda';\n\nconst styles = (theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  }\n});\n\nclass App extends Component {\n  state = {\n    players: '',\n    numTeams: 2,\n    teams: undefined,\n  };\n\n  handleNumTeamsChange = (e) =>\n    this.setState({ numTeams: e.target.value });\n\n  handlePlayersChange = (e) =>\n    this.setState({ players: e.target.value });\n\n  submitForm = (e) =>\n    this.setState({\n      teams: randomizeTeams(\n        this.state.players,\n        this.state.numTeams,\n      )\n    });\n\n  render() {\n    const { classes } = this.props;\n    const { players, numTeams, teams } = this.state;\n    return (\n      <form noValidate autoComplete=\"false\" className={classes.root}>\n        <Grid container spacing={8}>\n\n          <Grid item xs={12}>\n            <TextField\n              value={numTeams}\n              onChange={this.handleNumTeamsChange}\n              className={classes.textField}\n              label=\"Number of Teams\"\n              select\n            >\n              <MenuItem key={2} value={2}>2</MenuItem>\n              <MenuItem key={3} value={3}>3</MenuItem>\n              <MenuItem key={4} value={4}>4</MenuItem>\n              <MenuItem key={5} value={5}>5</MenuItem>\n            </TextField>\n            <TextField\n              label=\"Players\"\n              className={classes.textField}\n              value={players}\n              onChange={this.handlePlayersChange}\n              helperText=\"A comma-separated list of player names.\"\n            />\n          </Grid>\n\n          <Grid item xs={12}>\n            <Button variant=\"contained\" color=\"primary\" onClick={this.submitForm} onSubmit={this.submitForm}>Create Teams</Button>\n          </Grid>\n          {\n            teams &&\n            teams.map((team, idx) => (\n              <Grid key={idx} item xs={12}>\n                <Typography variant=\"title\">Team {idx + 1}</Typography>\n                <Typography>{ team.join(', ') }</Typography>\n              </Grid>\n            ))\n          }\n        </Grid>\n      </form>\n    );\n  }\n}\n\nexport default withStyles(styles)(App)\n\nconst randomizeTeams = (players, numTeams) => compose(\n  players => splitEvery(players.length / numTeams, players),\n  players => shuffle(players),\n  players => players.split(','),\n)(players);\n\n/**\n * https://stackoverflow.com/a/2450976/1593258\n*/\nconst shuffle = (array) => {\n  var currentIndex = array.length, temporaryValue, randomIndex;\n\n  // While there remain elements to shuffle...\n  while (0 !== currentIndex) {\n\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}